name: CI/CD Pipeline

on:
  pull_request:
    branches: [master]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.github/BRANCH_PROTECTION_SETUP.md'
      - '.github/CI_CD_README.md'
  push:
    branches: [master]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.github/BRANCH_PROTECTION_SETUP.md'
      - '.github/CI_CD_README.md'

env:
  NODE_VERSION: '20'
  PNPM_VERSION: 'latest'

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run ESLint
        run: pnpm run lint:eslint

      - name: Check code formatting
        run: pnpm run lint:check

      - name: Run tests
        run: pnpm run test:run

      - name: Build project
        run: pnpm run build

  type-check:
    name: Type Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Type check
        run: pnpm run check
